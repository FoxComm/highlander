// ===== Clearfix =====
.clearfix() {
  zoom: 1;
  &:before, &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}

// ===== Placeholder =====
.placeholder(@rules) {
  &::-webkit-input-placeholder {
    @rules();
  }
  &:-moz-placeholder {
    @rules();
  }
  &::-moz-placeholder {
    @rules();
  }
  &:-ms-input-placeholder {
    @rules();
  }
}

// ===== Font Values =====
.font-spec(@size) {
  font-size: @size;
}

.font-spec(@size, @weight) {
  font-weight: @weight;
  .font-spec(@size);
}

.font-spec(@size, @line-height) when (ispixel(@line-height)) {
  line-height: @line-height;
  .font-spec(@size);
}

.font-spec(@size, @weight, @lineHeight) {
  font-weight: @weight;
  line-height: @lineHeight;
  .font-spec(@size);
}

.font-spec(@size, @weight, @lineHeight, @letterSpacing) {
  letter-spacing: @letterSpacing;
  font-weight: @weight;
  line-height: @lineHeight;
  .font-spec(@size);
}

.line-height(@value) {
  line-height: @value;
}

.text-indent(@value) {
  text-indent: @value;
}

// ===== Size Values =====

.width(@value) {
  width: @value;
}

.min-width(@value) {
  min-width: @value;
}

.max-width(@value) {
  max-width: @value;
}

.height(@value) {
  height: @value;
}

.min-height(@value) {
  min-height: @value;
}

.max-height(@value) {
  max-height: @value;
}

.size(@square) {
  width: @square;
  height: @square;
}

.size(@width, @height) {
  width: @width;
  height: @height;
}

.circle(@size) {
  border-radius: 50%;
  .size(@size);
}

// ===== Mixin Values =====

.margin(@args...) {
  margin: @args;
}

.margin-top(@value) {
  margin-top: @value;
}

.margin-right(@value) {
  margin-right: @value;
}

.margin-bottom(@value) {
  margin-bottom: @value;
}

.margin-left(@value) {
  margin-left: @value;
}

// ===== Padding Values =====
.padding(@args...) {
  padding: @args;
}

.padding-top(@value) {
  padding-top: @value;
}

.padding-right(@value) {
  padding-right: @value;
}

.padding-bottom(@value) {
  padding-bottom: @value;
}

.padding-left(@value) {
  padding-left: @value;
}

// ===== Position Values =====
.top(@value) {
  top: @value;
}

.left(@value) {
  left: @value;
}

.right(@value) {
  right: @value;
}

.bottom(@value) {
  bottom: @value;
}

.border-radius(@value) {
  border-radius: @value;
}

.inline-block(@valign: top) {
  display: inline-block;
  vertical-align: @valign;
}

.colors(@fg: @color-text, @bg: @color-default-bg) {
  color: @fg;
  background-color: @bg;
}

.border(@size, @type, @color) {
  border: @size @type @color;
}

.border-top(@size, @type, @color) {
  border-top: @size @type @color;
}

.box-shadow(@top, @right, @bottom, @left, @color) {
  box-shadow: @top @right @bottom @left @color;
}

// ===== Styling =====

.highlight-border-behaviour() {
  border: 1px solid @color-border;
  transition: border .20s ease-out;

  &:hover {
    border-color: @bg-nav-main;
  }

  &:active,
  &:focus {
    border-color: @bg-green-buttons;
  }

  &:invalid:not(:required),
  &.is-error {
    border-color: @color-error-text;
  }
}

.scroll-shadow(@shadow-color, @bg-color, @size: 12px, @from-left: 0, @from-right: 100%) {
  background:
    linear-gradient(to right,  @bg-color 20%, rgba(255,255,255,0)) @from-left 0,
    linear-gradient(to left, @bg-color 20%, rgba(255,255,255,0)) @from-right 0,
    linear-gradient(to right,  @shadow-color 20%, rgba(255,255,255,0)) @from-left 0,
    linear-gradient(to left, @shadow-color 20%, rgba(255,255,255,0)) @from-right 0;
  background-color: @bg-color;
  background-repeat: no-repeat;
  background-size: (@size + 30px) 100%, (@size + 30px) 100%, @size 100%, @size 100%;
  background-attachment: local, local, scroll, scroll;
}

// ===== Animations =====

.chevron() {
  transform: rotateX(0);
  transition: transform .25s ease-out;

  &._up {
    transform: rotateX(180deg);
  }
}
