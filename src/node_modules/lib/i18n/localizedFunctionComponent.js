import React, { Component, PropTypes } from 'react';
import Gettext from 'node-gettext';
import { autobind } from 'core-decorators';


type LocalizedProps = {
  text: string;
  plural: ?string;
  count: ?number;
};

type LocalizedContext = {
  translator: Gettext;
};

export default function localizedFunctionComponent(WrappedComponent) {
  return class Localized extends Component {

    props: LocalizedProps;

    context: LocalizedContext;

    static contextTypes = {
      translator: PropTypes.object.isRequired,
    };

    @autobind
    t(message, plural, count) {
      return this.context.translator.ngettext(message, plural, count);
    }

    render() {
      return React.createElement(WrappedComponent.bind({t: this.t}), this.props);
    }

  };
}
