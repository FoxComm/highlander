import _ from 'lodash';
import React, { Component, PropTypes } from 'react';
import Gettext from 'node-gettext';
import plurals from 'node-gettext/lib/plurals';


type MessageProps = {
  text: string;
  plural: ?string;
  count: ?number;
};

type MessageContext = {
  translator: Gettext;
  locale: string;
  translation: Object;
};

export default class Message extends Component {

  props: MessageProps;

  context: MessageContext;

  static contextTypes = {
    translator: PropTypes.object.isRequired,
    locale: PropTypes.string.isRequired,
    translation: PropTypes.object.isRequired,
  };

  constructor(props: MessageProps, context: MessageContext) {
    super(props, context);

    this.updateTranslator(context);
  }

  componentDidMount() {
    this.updateTranslator(this.context);
  }

  componentWillReceiveProps(props: MessageProps, context: MessageContext) {
    this.updateTranslator(context);
  }

  updateTranslator(context: MessageContext) {
    const {translator, locale, translation} = context;
    if (!locale || !translation) {
      return;
    }

    const data = _.clone(translation);
    const pluralsInfo = plurals[locale];
    data.pluralsFunc = pluralsInfo ? pluralsInfo.pluralsFunc : plurals.en.pluralsFunc;

    const {domains} = translator;
    domains[locale] = data;

    translator.textdomain(locale);
  }

  render() {
    const {text, plural, count} = this.props;

    return (
      <span>
        {this.context.translator.ngettext(text, plural, count)}
      </span>
    );
  }

}
