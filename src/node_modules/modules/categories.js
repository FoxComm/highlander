/* @flow */

import { createReducer } from 'redux-act';
import createActionAsync from './async-fetch-utils';

function apiCall(): Promise {
  const result = [
    {id: 2, name: 'eyeglasses'},
    {id: 3, name: 'sunglasses'},
    {id: 4, name: 'readers'},
  ];
  return Promise.resolve(result);
}

const {fetch, reducers, actions, initialState} = createActionAsync('CATEGORIES', apiCall);

const reducer = createReducer({
  [actions.fetchStarted.toString()]: state => reducers.fetchStarted(state),
  [actions.fetchSucceeded.toString()]: (state, payload) => reducers.fetchSucceeded(state, payload),
  [actions.fetchFailed.toString()]: (state, err) => reducers.fetchFailed(state, err),
}, initialState);

export default reducer; export { fetch };
