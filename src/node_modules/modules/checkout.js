
import {createAction, createReducer} from 'redux-act';
import { assoc } from 'sprout-data';
import createAsyncActions from './async-utils';

export const EditStages = {
  shipping: 0,
  delivery: 1,
  billing: 2,
};

export type EditStage = number;

export type ShippingData = {
  city?: string;
}

export type CheckoutState = {
  editStage: EditStage;
  shippingData: ShippingData
};

export const setEditStage = createAction('CHECKOUT_SET_EDIT_STAGE');
export const setShippingData = createAction('CHECKOUT_SET_SHIPPING_DATA', (key, value) => [key, value]);

/* eslint-disable quotes, quote-props */

function _fetchShippingMethods() {
  return Promise.resolve([
    {
      "id": 1,
      "name": "7-10 DAY STANDARD",
      "price": 0,
      "isEnabled": true,
    },
    {
      "id": 2,
      "name": "2 DAY AIR",
      "price": 1500,
      "isEnabled": true,
    },
    {
      "id": 3,
      "name": "OVERNIGHT",
      "price": 4000,
      "isEnabled": true,
    },
  ]);
}

/* eslint-enable quotes, quote-props */

const shippingMethods = createAsyncActions('shipping-methods', _fetchShippingMethods);

export const fetchShippingMethods = shippingMethods.fetch;
export const selectShippingMethod = createAction('CHECKOUT_SET_SHIPPING_METHOD');

const shippingData = process.env.NODE_ENV == 'development' ? {
  address1: 'Some street 1456',
  name: 'home',
  country: {
    alpha3: 'USA',
    id: 234,
  },
  state: {
    name: 'Washington',
  },
  zip: 22222,
  city: 'Washington',
  phone: '77775777',
} : {};

const initialState: CheckoutState = {
  editStage: EditStages.delivery,
  shippingData,
  shippingMethods: [],
};

const reducer = createReducer({
  [setEditStage]: (state, editStage: EditStage) => {
    return {
      ...state,
      editStage,
    };
  },
  [setShippingData]: (state, [key, value]) => {
    return assoc(state,
      ['shippingData', key], value
    );
  },
  [shippingMethods.actions.fetchSucceeded]: (state, list) => {
    return {
      ...state,
      shippingMethods: list,
      selectedShippingMethod: list[0],
    };
  },
  [selectShippingMethod]: (state, shippingMethod) => {
    return {
      ...state,
      selectedShippingMethod: shippingMethod,
    };
  },
}, initialState);

export default reducer;
