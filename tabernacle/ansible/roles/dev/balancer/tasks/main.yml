---

- name: Get Consul Template
  get_url: url={{consul_template_url}} dest=/tmp/consul-template.zip

- name: Unzip Consul Template
  unarchive: src="/tmp/consul-template.zip" dest="/usr/local/bin/" copy=no
  args:
    creates: "/usr/local/bin/consul-template"

- name: Install Consul Template Service
  template: src=consul_template.service dest="{{dest_services}}/consul_template.service"

- name: Copy Consul Template Config File
  template: src=consul_template.conf dest="{{consul_data_dir}}/consul_template.conf"

- name: Copy Consul Template Service File
  template: src=consul_template.json dest=/etc/consul.d/consul_template.json
  notify: reload consul

- name: Install uuid4 Lua Lib
  copy: src=uuid4.lua dest=/etc/nginx/uuid4.lua

- name: Install basexx Lua Lib
  copy: src=basexx.lua dest=/etc/nginx/basexx.lua

- name: Install base config
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf

- name: Remove default config
  file: path=/etc/nginx/sites-available/default state=absent

- name: Make Certs Directory
  file: path=/certs state=directory mode="600"

- name: Copy Cert and Key
  copy: src="{{role_path}}/../../base/secret_keys/files/certs/{{cert_path}}/frontend/{{item}}" dest="/certs/{{item}}" mode="600"
  with_items:
    - domain.crt
    - domain.key

- name: Make Sure Nginx Restarts After Failure
  lineinfile: dest=/etc/systemd/system/multi-user.target.wants/nginx.service line="Restart=always" insertafter="^KillMode" state=present

- name: Install Service Locations Upstreams
  template: src=service_locations.j2 dest=/etc/nginx/service_locations.conf

- name: Install Service Upstreams
  template: src=services.j2 dest=/etc/nginx/services.template

- name: Reload Systemd for Nginx
  command: systemctl daemon-reload

- name: Restart Consul Template
  service: name=consul_template state=restarted
  when: not packing
