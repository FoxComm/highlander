{
  "id": "/",
  "groups": [
    {
      "id": "core",
      "apps": [
        {
            "id": "phoenix",
            "cmd": null,
            "cpus": 1,
            "mem": 4096,
            "disk": 0,
            "instances": 1,
            "labels": {
              "LAYER": "backend",
              "LANG": "scala",
              "consul": "phoenix",
              "TAG": "{{docker_tags.phoenix}}"
            },
            "env": {
              "PORT":"{{phoenix_port}}",
              "SCHEMA_REGISTRY_URL": "http://{{schema_server}}",
              "KAFKA_BROKER": "{{kafka_server}}",
              "PHOENIX_PUBLIC_KEY": "/keys/public_key.der",
              "PHOENIX_PRIVATE_KEY": "/keys/private_key.der",
              "PHOENIX_COOKIE_SECURE": "off",
              "PHOENIX_AUTH_METHOD": "jwt",
              "SEARCH_SERVER": "elasticsearch://{{search_server}}",
              "GOOGLE_OAUTH_ADMIN_CLIENT_ID": "{{google_oauth_admin_client_id}}",
              "GOOGLE_OAUTH_ADMIN_CLIENT_SECRET": "{{google_oauth_admin_secret}}",
              "GOOGLE_OAUTH_ADMIN_REDIRECT_URI": "{{google_oauth_admin_redirect_uri}}",
              "GOOGLE_OAUTH_ADMIN_HOSTED_DOMAIN": "{{google_oauth_admin_hosted_domain}}",
              "GOOGLE_OAUTH_CUSTOMER_CLIENT_ID": "{{google_oauth_frontend_client_id}}",
              "GOOGLE_OAUTH_CUSTOMER_CLIENT_SECRET": "{{google_oauth_frontend_secret}}",
              "GOOGLE_OAUTH_CUSTOMER_REDIRECT_URI": "{{google_oauth_frontend_redirect_uri}}",
              "AWS_ACCESS_KEY": "{{secret_key}}",
              "AWS_SECRET_KEY": "{{secret_access_key}}",
              "S3_BUCKET": "{{s3_bucket}}",
              "S3_REGION": "{{s3_region}}",
              "STRIPE_API_KEY": "{{stripe_api_key}}",
              "MIDDLEWAREHOUSE_URL": "http://{{middlewarehouse_server}}",
              "TAX_RULE_REGION": "{{phoenix_tax_rule_region}}",
              "TAX_RULE_RATE": "{{phoenix_tax_rule_rate}}",
              "JAVA_OPTS": "{% if jmx_enabled %}-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port={{phoenix_jmx_port}} -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false{% endif %} -Dphoenix.env={{phoenix_env}} -Dhttp.interface=0.0.0.0 -Ddb.host={{db_host}} -Ddb.url=jdbc:postgresql://{{db_host}}/{{db_name}}?user={{db_user}} -Ddb.name={{db_name}} -Dakka.tracing.host={{zipkin_collector}} -Dakka.tracing.enabled={{phoenix_tracing}} -Dauth.tokenTTL={{phoenix_token_ttl}}"
            },
            "ports": [{{phoenix_port}}],
            "healthChecks": [
              {
                "path": "/v1/public/ping",
                "protocol": "HTTP",
                "gracePeriodSeconds": 300,
                "intervalSeconds": 30,
                "timeoutSeconds": 20,
                "maxConsecutiveFailures": 3,
                "ignoreHttp1xx": false,
                "port": {{phoenix_port}}
              }
            ],
            "constraints": [["hostname", "UNIQUE"]],
            "container": {
              "type": "DOCKER",
              "volumes": [
                {
                  "containerPath": "/keys",
                  "hostPath": "{{public_keys_dest_dir}}",
                  "mode": "RO"
                },
                {
                  "containerPath": "{{docker_logs_dir}}",
                  "hostPath": "{{docker_logs_host_dir}}",
                  "mode": "RW"
                }
              ],
              "docker": {
                "image": "{{docker_registry}}:5000/phoenix:{{docker_tags.phoenix}}",
                "network": "HOST",
                "privileged": false,
                "parameters": [],
                "forcePullImage": true
              }
            }
        },
        {
          "id": "isaac",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "backend",
            "LANG": "cpp",
            "consul": "isaac",
            "TAG": "{{docker_tags.isaac}}"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "/certs",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              },
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "docker-stage.foxcommerce.com:5000/isaac:{{docker_tags.isaac}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "PUBLIC_KEY": "/certs/public_key.pem",
            "DB_HOST": "{{docker_db_host}}",
            "DB_NAME": "{{phoenix_db_name}}",
            "DB_USER": "{{db_user}}"
          },
          "healthChecks": [
            {
              "path": "/ping",
              "protocol": "HTTP",
              "portIndex": 0,
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false
            }
          ],
          "portDefinitions": [
            {
              "port": 10000,
              "protocol": "tcp",
              "labels": {}
            }
          ]
        },
        {
          "id": "solomon",
          "cmd": null,
          "cpus": 0.5,
          "mem": 256,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "backend",
            "LANG": "elixir",
            "consul": "solomon",
            "TAG": "{{docker_tags.solomon}}"
          },
          "env": {
            "PORT": "{{solomon_port}}",
            "DB_USER": "{{db_user}}",
            "DB_HOST": "{{docker_db_host}}",
            "DB_NAME": "{{phoenix_db_name}}",
            "DB_PASSWORD": "",
            "PRIVATE_KEY": "{{private_keys_dest_dir}}/private_key.pem",
            "PUBLIC_KEY": "{{public_keys_dest_dir}}/public_key.pem",
            "TOKEN_TTL": "{{solomon_token_ttl}}",
            "SOLOMON_SECRET": "{{solomon_secret_token}}"
          },
          "ports": [{{solomon_port}}],
          "constraints": [["hostname", "UNIQUE"]],
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{public_keys_dest_dir}}",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              },
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/solomon:{{docker_tags.solomon}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "healthChecks": [
            {
              "path": "/ping",
              "protocol": "HTTP",
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false,
              "port": {{solomon_port}}
            }
          ]
        },
        {
            "id": "middlewarehouse",
            "cmd": null,
            "cpus": 0.25,
            "mem": 64,
            "disk": 0,
            "instances": 1,
            "labels": {
              "LAYER": "backend",
              "LANG": "go",
              "consul": "middlewarehouse",
              "TAG": "{{docker_tags.middlewarehouse}}"
            },
            "container": {
              "type": "DOCKER",
              "volumes": [
                {
                  "containerPath": "{{docker_logs_dir}}",
                  "hostPath": "{{docker_logs_host_dir}}",
                  "mode": "RW"
                }
              ],
              "docker": {
                "image": "{{docker_registry}}:5000/middlewarehouse:{{docker_tags.middlewarehouse}}",
                "network": "HOST",
                "privileged": false,
                "parameters": [],
                "forcePullImage": true
              }
            },
            "ports": [{{middlewarehouse_port}}],
            "env": {
              "PORT": "{{middlewarehouse_port}}",
              "DB_SSLMODE": "disable",
              "SCHEMA_REGISTRY_URL": "http://{{schema_server}}",
              "DB_NAME": "{{middlewarehouse_db_name}}",
              "PHOENIX_URL": "http://{{phoenix_server}}",
              "ZOOKEEPER_URL": "{{zookeeper_server}}",
              "LOG_LEVEL": "info",
              "DB_HOST": "{{docker_db_host}}",
              "KAFKA_BROKER": "{{kafka_server}}",
              "DB_USER": "middlewarehouse"
            },
            "constraints": [["hostname", "UNIQUE"]],
            "healthChecks": [
              {
                "path": "/v1/public/ping",
                "protocol": "HTTP",
                "gracePeriodSeconds": 300,
                "intervalSeconds": 30,
                "timeoutSeconds": 20,
                "maxConsecutiveFailures": 3,
                "ignoreHttp1xx": false,
                "port": {{middlewarehouse_port}}
              }
            ]
        }
      ]
    },
    {
      "id": "services",
      "dependencies": ["/core"],
      "apps":[
        {
          "id": "hyperion",
          "cmd": null,
          "cpus": 0.5,
          "mem": 256,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "backend",
            "LANG": "elixir",
            "consul": "hyperion",
            "TAG": "{{docker_tags.hyperion}}"
          },
          "env": {
            "HYPERION_DB_USER": "{{hyperion_db_user}}",
            "HYPERION_DB_HOST": "{{docker_db_host}}",
            "HYPERION_DB_NAME": "{{hyperion_db_name}}",
            "HYPERION_DB_TEST_NAME": "{{hyperion_db_test_name}}",
            "HYPERION_DB_PASSWORD": "",
            "AWS_ACCESS_KEY_ID": "{{hyperion_aws_access_key_id}}",
            "AWS_SECRET_ACCESS_KEY": "{{hyperion_aws_secret_access_key}}",
            "MWS_ACCESS_KEY_ID": "{{hyperion_mws_access_key_id}}",
            "MWS_SECRET_ACCESS_KEY" : "{{hyperion_mws_secret_access_key}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}",
            "PHOENIX_ORG": "{{phoenix_api_user_org}}",
            "PHOENIX_URL": "https://{{storefront_server_name}}",
            "PUBLIC_KEY": "{{public_keys_dest_dir}}/public_key.pem",
            "PUSH_CHECK_INTERVAL": "{{hyperion_push_check_interval}}",
            "CREATE_ASHES_PLUGIN": "{{hyperion_create_plugin_in_ashes_on_start}}"
          },
          "constraints": [["hostname", "UNIQUE"]],
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{public_keys_dest_dir}}",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              },
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/hyperion:{{docker_tags.hyperion}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "healthChecks": [
            {
              "path": "/v1/public/health",
              "protocol": "HTTP",
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false,
              "portIndex": 0
            }
          ]
        },
        {
          "id": "marketplace",
          "cmd": null,
          "cpus": 1,
          "mem": 256,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "backend",
            "LANG": "elixir",
            "consul": "marketplace",
            "TAG": "{{docker_tags.marketplace}}"
          },
          "env": {
            "DB_NAME": "{{marketplace_db_name}}",
            "PHOENIX_URL": "{{phoenix_host}}",
            "PHOENIX_PORT": "{{phoenix_port}}",
            "SOLOMON_URL": "{{solomon_host}}",
            "DB_HOST": "{{docker_db_host}}",
            "DB_USER": "{{marketplace_db_user}}",
            "DB_PASSWORD": "",
            "SOLOMON_PORT": "{{solomon_port}}",
            "PUBLIC_KEY": "{{public_keys_dest_dir}}/public_key.pem",
            "STRIPE_API_KEY": "{{stripe_api_key}}"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{public_keys_dest_dir}}",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/marketplace:{{docker_tags.marketplace}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "healthChecks": [
            {
              "path": "/ping",
              "protocol": "HTTP",
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false,
              "portIndex": 0
            }
          ]
        },
        {
          "id": "peacock",
          "cmd": null,
          "cpus": 1,
          "mem": 1024,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "frontend",
            "LANG": "js",
            "consul": "peacock",
            "TAG": "{{docker_tags.peacock}}"
          },
          "env": {
            "API_URL": "https://{{storefront_server_name}}",
            "NODE_ENV": "production",
            "PHOENIX_PUBLIC_KEY": "/keys/public_key.pem",
            "STRIPE_PUBLISHABLE_KEY": "{{stripe_publishable_key}}",
            "MAILCHIMP_API_KEY": "{{mailchimp_api_key}}",
            "CONTACT_EMAIL": "{{contact_email}}",
            "GA_TRACKING_ID": "{{ga_tracking_id}}",
            "IMGIX_PRODUCTS_SOURCE": "{{imgix_products_source}}",
            "S3_BUCKET_NAME": "{{imgix_s3_bucket_name}}",
            "S3_BUCKET_PREFIX": "{{imgix_s3_bucket_prefix}}"
          },
          "healthChecks": [
            {
              "path": "/",
              "protocol": "HTTP",
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false,
              "portIndex": 0
            }
          ],
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "/keys",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              },
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/peacock:{{docker_tags.peacock}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          }
        }
      ]
    },
    {
      "id": "ashes",
      "dependencies": ["/core", "/services"],
      "apps": [
        {
          "id": "ashes",
          "cmd": null,
          "cpus": 1,
          "mem": 2048,
          "disk": 0,
          "instances": 1,
          "env": {
            "NODE_ENV": "production",
            "PHOENIX_PUBLIC_KEY": "/keys/public_key.pem",
            "BEHIND_NGINX": "true",
            "STRIPE_PUBLISHABLE_KEY": "{{stripe_publishable_key}}",
            "GA_TRACKING_ID": "{{ashes_ga_tracking_id}}"
          },
          "labels": {
            "LAYER": "frontend",
            "LANG": "javascript",
            "consul": "ashes",
            "TAG": "{{docker_tags.ashes}}"
          },
          "healthChecks": [
            {
              "path": "/admin/login",
              "protocol": "HTTP",
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false,
              "portIndex": 0
            }
          ],
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "/keys",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              },
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/ashes:{{docker_tags.ashes}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          }
        }
      ]
    },
    {
      "id": "frontend",
      "dependencies": ["/core", "/services"],
      "apps": [
        {
          "id": "storefront",
          "cmd": null,
          "cpus": 1,
          "mem": 1024,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "frontend",
            "LANG": "js",
            "consul": "firebrand",
            "TAG": "{{docker_tags.firebrand}}"
          },
          "env": {
            "API_URL": "https://{{storefront_server_name}}",
            "NODE_ENV": "production",
            "PHOENIX_PUBLIC_KEY": "/keys/public_key.pem",
            "STRIPE_PUBLISHABLE_KEY": "{{stripe_publishable_key}}"
          },
          "healthChecks": [
            {
              "path": "/",
              "protocol": "HTTP",
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false,
              "portIndex": 0
            }
          ],
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "/keys",
                "hostPath": "{{public_keys_dest_dir}}",
                "mode": "RO"
              },
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/firebrand:{{docker_tags.firebrand}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          }
        }
      ]
    },
    {
      "id": "consumers",
      "dependencies": ["/core"],
      "apps": [
        {
          "id": "green-river",
          "cmd": null,
          "cpus": 1,
          "mem": 2048,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "scala",
            "TAG": "{{docker_tags.greenriver}}",
            "consul": "green-river"
          },
          "env": {
            "JAVA_OPTS": "-Denv={{greenriver_env}} -D{{greenriver_env}}.kafka.broker={{kafka_server}} -D{{greenriver_env}}.elastic.host=elasticsearch://{{search_server}} -D{{greenriver_env}}.activity.phoenix.url=http://{{phoenix_server}}/v1 -D{{greenriver_env}}.avro.schemaRegistryUrl=http://{{schema_server}} -D{{greenriver_env}}.consume.restart={{greenriver_restart}} {% if jmx_enabled %}-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port={{greenriver_jmx_port}} -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false{% endif %}"
          },
          "container": {
            "type": "DOCKER",
            "docker": {
              "image": "{{docker_registry}}:5000/greenriver:{{docker_tags.greenriver}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            },
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ]
          },
          "portDefinitions": [
            {
              "port": 10003,
              "protocol": "tcp",
              "labels": {}
            }
          ],
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep green-river-assembly-1.0.jar"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 20,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3
            }
          ]
        },
        {
          "id": "messaging",
          "cmd": null,
          "cpus": 1,
          "mem": 512,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "clojure",
            "TAG": "{{docker_tags.messaging}}",
            "consul": "messaging"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/messaging:{{docker_tags.messaging}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "API_HOST": "{{messaging_host}}",
            "KAFKA_BROKER": "{{kafka_server}}",
            "SCHEMA_REGISTRY_URL": "http://{{schema_server}}",
            "JAVA_OPTS": "{% if jmx_enabled %}-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port={{messaging_jmx_port}} -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false{% endif %}"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep messaging.jar"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3
            }
          ]
        },
        {% if with_shipstation %}
        {
          "id": "shipstation",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 0,
          "labels": {
            "LAYER": "consumer",
            "LANG": "go",
            "TAG": "{{docker_tags.shipstation_consumer}}",
            "consul": "shipstation"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [],
            "docker": {
              "image": "{{docker_registry}}:5000/shipstation-consumer:{{docker_tags.shipstation_consumer}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "SCHEMA_REPOSITORY_URL": "http://{{schema_server}}",
            "ZOOKEEPER_URL": "{{zookeeper_server}}",
            "MWH_URL": "http://{{middlewarehouse_server}}",
            "API_KEY": "{{shipstation_api_key}}",
            "API_SECRET": "{{shipstation_api_secret}}",
            "TOPIC": "{{shipstation_topic}}",
            "POLLING_INTERVAL": "{{shipstation_interval}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep shipstation-consumer"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3
            }
          ]
        },
        {% endif %}
        {
          "id": "capture-consumer",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "go",
            "TAG": "{{docker_tags.capture_consumer}}",
            "consul": "capture-consumer"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/capture-consumer:{{docker_tags.capture_consumer}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "TOPIC": "{{activities_topic}}",
            "SCHEMA_REPOSITORY_URL": "http://{{schema_server}}",
            "ZOOKEEPER_URL": "{{zookeeper_server}}",
            "MWH_URL": "http://{{middlewarehouse_server}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep capture-consumer"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false
            }
          ]
        },
        {
          "id": "customer-groups-consumer",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "go",
            "TAG": "{{docker_tags.customer_groups_consumer}}",
            "consul": "customer-groups-consumer"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/customer-groups-consumer:{{docker_tags.customer_groups_consumer}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "ELASTIC_URL": "http://{{search_server_http}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}",
            "POLLING_INTERVAL": "1m",
            "TOPIC": "{{activities_topic}}",
            "SCHEMA_REPOSITORY_URL": "http://{{schema_server}}",
            "ZOOKEEPER_URL": "{{zookeeper_server}}",
            "MWH_URL": "http://{{middlewarehouse_server}}"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep customer-groups-consumer"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3
            }
          ]
        },
        {
          "id": "gift-card-consumer",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "go",
            "TAG": "{{docker_tags.gift_card_consumer}}",
            "consul": "gift-card-consumer"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/gift-card-consumer:{{docker_tags.gift_card_consumer}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "TOPIC": "{{activities_topic}}",
            "SCHEMA_REPOSITORY_URL": "http://{{schema_server}}",
            "ZOOKEEPER_URL": "{{zookeeper_server}}",
            "MWH_URL": "http://{{middlewarehouse_server}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep gift-card-consumer"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3,
              "ignoreHttp1xx": false
            }
          ]
        },
        {
          "id": "shipments-consumer",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "go",
            "TAG": "{{docker_tags.shipments_consumer}}",
            "consul": "shipments-consumer"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/shipments-consumer:{{docker_tags.shipments_consumer}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "TOPIC": "{{activities_topic}}",
            "SCHEMA_REPOSITORY_URL": "http://{{schema_server}}",
            "ZOOKEEPER_URL": "{{zookeeper_server}}",
            "MWH_URL": "http://{{middlewarehouse_server}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep shipments-consumer"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3
            }
          ]
        },
        {
          "id": "stock-items-consumer",
          "cmd": null,
          "cpus": 0.25,
          "mem": 64,
          "disk": 0,
          "instances": 1,
          "labels": {
            "LAYER": "consumer",
            "LANG": "go",
            "TAG": "{{docker_tags.stock_items_consumer}}",
            "consul": "stock-items-consumer"
          },
          "container": {
            "type": "DOCKER",
            "volumes": [
              {
                "containerPath": "{{docker_logs_dir}}",
                "hostPath": "{{docker_logs_host_dir}}",
                "mode": "RW"
              }
            ],
            "docker": {
              "image": "{{docker_registry}}:5000/stock-items-consumer:{{docker_tags.stock_items_consumer}}",
              "network": "HOST",
              "privileged": false,
              "parameters": [],
              "forcePullImage": true
            }
          },
          "env": {
            "TOPIC": "sku_search_view",
            "SCHEMA_REPOSITORY_URL": "http://{{schema_server}}",
            "ZOOKEEPER_URL": "{{zookeeper_server}}",
            "MWH_URL": "http://{{middlewarehouse_server}}",
            "PHOENIX_URL": "http://{{phoenix_server}}",
            "PHOENIX_USER": "{{phoenix_api_user}}",
            "PHOENIX_PASSWORD": "{{phoenix_api_password}}",
            "OFFSET_RESET_STRATEGY": "smallest"
          },
          "healthChecks": [
            {
              "protocol": "COMMAND",
              "command": {
                "value": "ps -ef | grep -v grep | grep stock-items-consumer"
              },
              "gracePeriodSeconds": 300,
              "intervalSeconds": 30,
              "timeoutSeconds": 20,
              "maxConsecutiveFailures": 3
            }
          ]
        }
      ]
    },
    {
      "id": "ext",
      "dependencies": ["/core", "/services"],
      "apps": [
        {% if with_storefront_td %}
          {
            "id": "storefront-top-drawer",
            "cmd": null,
            "cpus": 1,
            "mem": 1024,
            "disk": 0,
            "instances": 1,
            "labels": {
              "LAYER": "frontend",
              "LANG": "js",
              "TAG": "{{docker_tags.storefront_td}}",
              "consul": "storefront-top-drawer"
            },
            "env": {
              "API_URL": "https://{{storefront_server_name}}",
              "NODE_ENV": "production",
              "PHOENIX_PUBLIC_KEY": "/keys/public_key.pem",
              "STRIPE_PUBLISHABLE_KEY": "{{stripe_publishable_key}}",
              "CONTACT_EMAIL": "{{contact_email}}",
              "MAILCHIMP_API_KEY": "{{mailchimp_api_key}}",
              "URL_PREFIX": "{{url_prefix_topdrawer}}",
              "GA_TRACKING_ID": "{{ga_tracking_id}}"
            },
            "healthChecks": [
              {
                "path": "{{url_prefix_topdrawer}}",
                "protocol": "HTTP",
                "gracePeriodSeconds": 300,
                "intervalSeconds": 30,
                "timeoutSeconds": 20,
                "maxConsecutiveFailures": 3,
                "ignoreHttp1xx": false,
                "portIndex": 0
              }
            ],
            "portDefinitions": [
              {
                "port": 10001,
                "protocol": "tcp",
                "labels": {}
              }
            ],
            "container": {
              "type": "DOCKER",
              "volumes": [
                {
                  "containerPath": "/keys",
                  "hostPath": "{{public_keys_dest_dir}}",
                  "mode": "RO"
                }
              ],
              "docker": {
                "image": "{{docker_registry}}:5000/td-storefront:{{docker_tags.storefront_td}}",
                "network": "HOST",
                "privileged": false,
                "parameters": [],
                "forcePullImage": true
              }
            }
          }
        {% endif %}
        {% if with_storefront_tpg %}
          {% if with_storefront_td %}
          ,
          {% endif %}
          {
            "id": "storefront-perfect-gourmet",
            "cmd": null,
            "cpus": 1,
            "mem": 1024,
            "disk": 0,
            "instances": 1,
            "labels": {
              "LAYER": "frontend",
              "LANG": "js",
              "TAG": "{{docker_tags.storefront_tpg}}",
              "consul": "storefront-perfect-gourmet"
            },
            "env": {
              "API_URL": "https://{{storefront_server_name}}",
              "NODE_ENV": "production",
              "PHOENIX_PUBLIC_KEY": "/keys/public_key.pem",
              "STRIPE_PUBLISHABLE_KEY": "{{stripe_publishable_key}}",
              "MAILCHIMP_API_KEY": "{{mailchimp_api_key}}",
              "CONTACT_EMAIL": "{{contact_email}}",
              "URL_PREFIX": "{{url_prefix_perfectgourmet}}",
              "FB_PIXEL_ID": "{{facebook_pixel_id}}",
              "GA_TRACKING_ID": "{{ga_tracking_id}}",
              "IMGIX_PRODUCTS_SOURCE": "{{imgix_products_source}}",
              "S3_BUCKET_NAME": "{{imgix_s3_bucket_name}}",
              "S3_BUCKET_PREFIX": "{{imgix_s3_bucket_prefix}}"
            },
            "healthChecks": [
              {
                "path": "{{url_prefix_perfectgourmet}}",
                "protocol": "HTTP",
                "gracePeriodSeconds": 300,
                "intervalSeconds": 30,
                "timeoutSeconds": 20,
                "maxConsecutiveFailures": 3,
                "ignoreHttp1xx": false,
                "portIndex": 0
              }
            ],
            "portDefinitions": [
              {
                "port": 10001,
                "protocol": "tcp",
                "labels": {}
              }
            ],
            "container": {
              "type": "DOCKER",
              "volumes": [
                {
                  "containerPath": "/keys",
                  "hostPath": "{{public_keys_dest_dir}}",
                  "mode": "RO"
                }
              ],
              "docker": {
                "image": "{{docker_registry}}:5000/tpg-storefront:{{docker_tags.storefront_tpg}}",
                "network": "HOST",
                "privileged": false,
                "parameters": [],
                "forcePullImage": true
              }
            }
          }

        {% endif %}
      ]
    }
  ]
}