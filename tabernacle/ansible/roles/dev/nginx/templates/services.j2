<<- range $id, $app := .Apps >>
  upstream <<index $app.Hosts 0 >> {
    <<- range $app.Tasks >>
    server << .Host >>:<< index .Ports 0 >> max_fails=10 fail_timeout=30s weight=1;
    <<- end >>
  }
  server {
    # listen 80;

    <<- range $app.Hosts >>
    server_name << . >>;
    <<- end >>

    location / {
      proxy_set_header HOST $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
      proxy_connect_timeout 30;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_pass http://<<index $app.Hosts 0 >>;
    }
  }
<<- end >>


{% if with_onboarding %}
# upstream onboarding {
#   << range service "onboarding-service" >> server << .Address >>:<< .Port >> max_fails=10 fail_timeout=30s weight=1;
#   << else >> server {{onboarding_service_server}} fail_timeout=30s max_fails=10; << end >>
# }
{% endif %}


{% if is_appliance %}
upstream dashboard {
   server {{dashboard_server}} max_fails=10 fail_timeout=30s weight=1;
}

upstream marathon {
   server {{marathon_server}} max_fails=10 fail_timeout=30s weight=1;
}

upstream pgweb {
   server {{pgweb_server}} max_fails=10 fail_timeout=30s weight=1;
}
{% endif %}
