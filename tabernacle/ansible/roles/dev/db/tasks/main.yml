---

- name: Kill Bottledwater Services
  shell: systemctl stop bottledwater_{{item}} || true
  with_items:
    - phoenix
    - middlewarehouse
    - marketplace
  when: item != 'marketplace' or with_marketplace

- name: Kill Materialized Views
  shell: systemctl stop materialized_views || true

- name: Restart Postgres
  service: name=postgresql state=restarted

- name: Create App Databases
  postgresql_db: name={{item}} encoding='UTF-8' lc_ctype='en_US.UTF-8' lc_collate='en_US.UTF-8' template='template0'
  with_items:
    - "{{phoenix_db_name}}"
    - "{{middlewarehouse_db_name}}"
    - "{{hyperion_db_name}}"
    - "{{marketplace_db_name}}"
  when: item != "{{marketplace_db_name}}" or with_marketplace

- name: Create IC Database
  postgresql_db: name={{bernardo_db_name}} encoding='UTF-8' lc_ctype='en_US.UTF-8' lc_collate='en_US.UTF-8' template='template0'

- name: Enable Bottledwater Extensions in Postgres
  postgresql_ext: name=bottledwater db={{item}}
  with_items:
    - "{{phoenix_db_name}}"
    - "{{middlewarehouse_db_name}}"
    - "{{marketplace_db_name}}"
  when: item != "{{marketplace_db_name}}" or with_marketplace

- name: Configure Database Users
  postgresql_user: name={{item}} state=present role_attr_flags=SUPERUSER
  with_items:
    - root
    - "'{{user}}'"
    - phoenix
    - middlewarehouse
    - hyperion
    - marketplace
  when: item != "marketplace" or with_marketplace

- name: Create Directories
  file: path={{item}} state=directory owner="{{user}}"
  with_items:
    - "{{phoenix_dir}}"
    - "{{middlewarehouse_dir}}"
    - "{{hyperion_dir}}"

- name: Synchronize SQL
  synchronize: src={{item.source}} dest={{item.destination}} delete=yes recursive=yes
  with_items:
    - { source: "{{phoenix_src}}/sql", destination: "{{phoenix_dir}}" }
    - { source: "{{middlewarehouse_src}}/sql", destination: "{{middlewarehouse_dir}}" }
    - { source: "{{hyperion_src}}/sql", destination: "{{hyperion_dir}}" }

- name: Delete Phoenix Log Directory
  file: path="{{phoenix_dir}}/log" state=absent

- name: Create Phoenix Log Directory
  file: path="{{phoenix_dir}}/log" state=directory owner="{{user}}" mode="0777"

- name: Setup Flyway Config
  template: src=flyway.conf dest="{{phoenix_dir}}/sql/flyway.conf" mode="u+x,g+x,o+x"

- name: Clean Phoenix Database
  shell: FLYWAY_HOME={{flyway_dir}} {{flyway}} clean
  args:
    chdir: "{{phoenix_dir}}"

- name: Migrate Phoenix Database
  shell: FLYWAY_HOME={{flyway_dir}} {{flyway}} migrate
  args:
    chdir: "{{phoenix_dir}}"

- name: Clean Middlewarehouse Database
  shell: FLYWAY_HOME={{flyway_dir}} {{flyway}} clean
  args:
    chdir: "{{middlewarehouse_dir}}"

- name: Migrate Middlewarehouse Database
  shell: FLYWAY_HOME={{flyway_dir}} {{flyway}} migrate
  args:
    chdir: "{{middlewarehouse_dir}}"

- name: Clean Hyperion Database
  shell: FLYWAY_HOME={{flyway_dir}} {{flyway}} clean
  args:
    chdir: "{{hyperion_dir}}"

- name: Migrate Hyperion Database
  shell: FLYWAY_HOME={{flyway_dir}} {{flyway}} migrate
  args:
    chdir: "{{hyperion_dir}}"

- name: Setup Update Materialized Views SQL
  copy: src=update_materialized_views.sql dest={{update_materialized_views_sql}}

- name: Setup Materialized Views Command
  template: src=update_materialized_views_forever.sh dest="{{usr_local}}/bin/update_materialized_views_forever.sh" mode="u+x,g+x,o+x"

- name: Setup Materialized Views Service
  copy: src=materialized_views.service dest="{{dest_services}}/materialized_views.service"

- name: Setup Cron to Refresh Customers Ranking View
  cron: name="refresh customer ranking" minute="*/5" job="{{usr_local}}/bin/refresh_customer_ranks.sh > /dev/null"

- name: Reload Systemd for Materialized Views
  command: systemctl daemon-reload

- name: Start Materialized Views Service
  service: name=materialized_views state=started enabled=yes

- name: Start Bottledwater Services
  service: name=bottledwater_{{item}} state=started enabled=yes
  with_items:
    - phoenix
    - middlewarehouse
    - marketplace
  when: item != "marketplace" or with_marketplace
