# Common variables
home: /home/{{user}}
self_host: 127.0.0.1
dest_services: /etc/systemd/system
usr_local: /usr/local/
scala_version: scala-2.11
logrotate_dir: /etc/logrotate.d
foxcomm_domain: foxcommerce.com

# Sinopia
sinopia_base_dir: /sinopia
sinopia_url: https://npm.foxcommerce.com:4873

# Appliance-related things
appliance_prefix: appliance
appliance_hostname: "appliance-{{ansible_default_ipv4.address | replace(\".\", \"-\") }}.{{foxcomm_domain}}"
dashboard_assets_location: /usr/local/dashboard

# Keys
cert_path: test/fox
cert_type: docker
install_private_keys: true
install_public_keys: true
public_keys_dest_dir: /etc/keys
private_keys_dest_dir: /etc/keys

# Prompt answers
prompt_yes:
    - y
    - yes
    - yep

# Marathon defaults
marathon_retries: 60
marathon_delay: 10

# Docker defaults
docker_tag: master
docker_registry: docker-stage.foxcommerce.com
docker_registry_provider: gce
docker_logs_dir: /logs
docker_logs_host_dir: /var/log/docker

# Google Cloud defaults
gce_disk_size: 40
gce_image: appliance-base-170609-213643
gce_machine_type: n1-standard-4
gce_project_id: "foxcomm-staging"
gce_zone: "us-central1-a"

# Default docker tags for containers
docker_tags:
    ashes: "{{ lookup('env', 'DOCKER_TAG_ASHES') | default('master', true) }}"
    firebrand: "{{ lookup('env', 'DOCKER_TAG_FIREBRAND') | default('master', true) }}"
    peacock: "{{ lookup('env', 'DOCKER_TAG_PEACOCK') | default('master', true) }}"
    phoenix: "{{ lookup('env', 'DOCKER_TAG_PHOENIX') | default('master', true) }}"
    phoenix_seeder: "{{ lookup('env', 'DOCKER_TAG_PHOENIX_SEEDER') | default('master', true) }}"
    greenriver: "{{ lookup('env', 'DOCKER_TAG_GREENRIVER') | default('master', true) }}"
    middlewarehouse: "{{ lookup('env', 'DOCKER_TAG_MIDDLEWAREHOUSE') | default('master', true) }}"
    messaging: "{{ lookup('env', 'DOCKER_TAG_MESSAGING') | default('master', true) }}"
    isaac: "{{ lookup('env', 'DOCKER_TAG_ISAAC') | default('master', true) }}"
    solomon: "{{ lookup('env', 'DOCKER_TAG_SOLOMON') | default('master', true) }}"
    capture_consumer: "{{ lookup('env', 'DOCKER_TAG_CAPTURE_CONSUMER') | default('master', true) }}"
    gift_card_consumer: "{{ lookup('env', 'DOCKER_TAG_GIFT_CARD_CONSUMER') | default('master', true) }}"
    shipments_consumer: "{{ lookup('env', 'DOCKER_TAG_SHIPMENTS_CONSUMER') | default('master', true) }}"
    shipstation_consumer: "{{ lookup('env', 'DOCKER_TAG_SHIPSTATION_CONSUMER') | default('master', true) }}"
    stock_items_consumer: "{{ lookup('env', 'DOCKER_TAG_STOCK_ITEMS_CONSUMER') | default('master', true) }}"
    customer_groups_consumer: "{{ lookup('env', 'DOCKER_TAG_CUSTOMER_GROUPS_CONSUMER') | default('master', true) }}"
    storefront_td: "{{ lookup('env', 'DOCKER_TAG_STOREFRONT_TOPDRAWER') | default('master', true) }}"
    storefront_tpg: "{{ lookup('env', 'DOCKER_TAG_STOREFRONT_TPG') | default('master', true) }}"
    hyperion: "{{ lookup('env', 'DOCKER_TAG_HYPERION') | default('master', true) }}"
    geronimo: "{{ lookup('env', 'DOCKER_TAG_GERONIMO') | default('master', true) }}"
    bernardo: "{{ lookup('env', 'DOCKER_TAG_BERNARDO') | default('master', true) }}"
    henhouse: "{{ lookup('env', 'DOCKER_TAG_HENHOUSE') | default('master', true) }}"
    eggcrate: "{{ lookup('env', 'DOCKER_TAG_EGGCRATE') | default('master', true) }}"
    river_rock: "{{ lookup('env', 'DOCKER_TAG_RIVER_ROCK') | default('master', true) }}"
    digger_sphex: "{{ lookup('env', 'DOCKER_TAG_DIGGER_SPHEX') | default('master', true) }}"
    orders_sphex: "{{ lookup('env', 'DOCKER_TAG_ORDERS_SPHEX') | default('master', true) }}"
    orders_anthill: "{{ lookup('env', 'DOCKER_TAG_ORDERS_ANTHILL') | default('master', true) }}"
    orders_reviews: "{{ lookup('env', 'DOCKER_TAG_ORDERS_REVIEWS') | default('master', true) }}"
    product_activity: "{{ lookup('env', 'DOCKER_TAG_PRODUCT_ACTIVITY') | default('master', true) }}"
    anthill: "{{ lookup('env', 'DOCKER_TAG_ANTHILL') | default('master', true) }}"
    neo4j: "{{ lookup('env', 'DOCKER_TAG_NEO4J') | default('master', true) }}"
    neo4j_reset: "{{ lookup('env', 'DOCKER_TAG_NEO4J_RESET') | default('master', true) }}"
    suggester: "{{ lookup('env', 'DOCKER_TAG_SUGGESTER') | default('master', true) }}"
    data_import: "{{ lookup('env', 'DOCKER_TAG_DATA_IMPORT') | default('master', true) }}"
    onboarding_service: "{{ lookup('env', 'DOCKER_TAG_ONBOARING_SERVICE') | default('master', true) }}"
    onboarding_ui: "{{ lookup('env', 'DOCKER_TAG_ONBOARING_UI') | default('master', true) }}"

# Configurable Marathon re-deploys
marathon_restart:
    ashes: "{{ lookup('env', 'MARATHON_ASHES') | default(true, true) | bool }}"
    firebrand: "{{ lookup('env', 'MARATHON_FIREBRAND') | default(true, true) | bool }}"
    peacock: "{{ lookup('env', 'MARATHON_PEACOCK') | default(true, true) | bool }}"
    phoenix: "{{ lookup('env', 'MARATHON_PHOENIX') | default(true, true) | bool }}"
    greenriver: "{{ lookup('env', 'MARATHON_GREENRIVER') | default(true, true) | bool }}"
    middlewarehouse: "{{ lookup('env', 'MARATHON_MIDDLEWAREHOUSE') | default(true, true) | bool }}"
    messaging: "{{ lookup('env', 'MARATHON_MESSAGING') | default(true, true) | bool }}"
    isaac: "{{ lookup('env', 'MARATHON_ISAAC') | default(true, true) | bool }}"
    solomon: "{{ lookup('env', 'MARATHON_SOLOMON') | default(true, true) | bool }}"
    capture_consumer: "{{ lookup('env', 'MARATHON_CAPTURE_CONSUMER') | default(true, true) | bool }}"
    gift_card_consumer: "{{ lookup('env', 'MARATHON_GIFT_CARD_CONSUMER') | default(true, true) | bool }}"
    shipments_consumer: "{{ lookup('env', 'MARATHON_SHIPMENTS_CONSUMER') | default(true, true) | bool }}"
    shipstation_consumer: "{{ lookup('env', 'MARATHON_SHIPSTATION_CONSUMER') | default(true, true) | bool }}"
    stock_items_consumer: "{{ lookup('env', 'MARATHON_STOCK_ITEMS_CONSUMER') | default(true, true) | bool }}"
    customer_groups_consumer: "{{ lookup('env', 'MARATHON_CUSTOMER_GROUPS_CONSUMER') | default(true, true) | bool }}"
    onboarding_service: "{{ lookup('env', 'MARATHON_ONBOARDING_SERVICE') | default(true, true) | bool }}"
    onboarding_ui: "{{ lookup('env', 'MARATHON_ONBOARDING_UI') | default(true, true) | bool }}"
    storefront_td: "{{ lookup('env', 'MARATHON_STOREFRONT_TOPDRAWER') | default(true, true) | bool }}"
    storefront_tpg: "{{ lookup('env', 'MARATHON_STOREFRONT_TPG') | default(true, true) | bool }}"
    hyperion: "{{ lookup('env', 'MARATHON_HYPERION') | default(true, true) | bool }}"
    geronimo: "{{ lookup('env', 'MARATHON_GERONIMO') | default(true, true) | bool }}"
    bernardo: "{{ lookup('env', 'MARATHON_BERNARDO') | default(true, true) | bool }}"
    henhouse: "{{ lookup('env', 'MARATHON_HENHOUSE') | default(true, true) | bool }}"
    eggcrate: "{{ lookup('env', 'MARATHON_EGGCRATE') | default(true, true) | bool }}"
    river_rock: "{{ lookup('env', 'MARATHON_RIVER_ROCK') | default(true, true) | bool }}"
    digger_sphex: "{{ lookup('env', 'MARATHON_DIGGER_SPHEX') | default(true, true) | bool }}"
    orders_sphex: "{{ lookup('env', 'MARATHON_ORDERS_SPHEX') | default(true, true) | bool }}"
    orders_anthill: "{{ lookup('env', 'MARATHON_ORDERS_ANTHILL') | default(true, true) | bool }}"
    orders_reviews: "{{ lookup('env', 'MARATHON_ORDERS_REVIEWS') | default(true, true) | bool }}"
    product_activity: "{{ lookup('env', 'MARATHON_PRODUCT_ACTIVITY') | default(true, true) | bool }}"
    anthill: "{{ lookup('env', 'MARATHON_ANTHILL') | default(true, true) | bool }}"
    neo4j: "{{ lookup('env', 'MARATHON_NEO4J') | default(true, true) | bool }}"
    neo4j_reset: "{{ lookup('env', 'MARATHON_NEO4J_RESET') | default(true, true) | bool }}"
    suggester: "{{ lookup('env', 'MARATHON_SUGGESTER') | default(true, true) | bool }}"

# Should we do seeding for appliance
detach_seeders: "{{ lookup('env', 'DETACH_SEEDERS') | default(false, true) | bool }}"
with_appliance_seeding: "{{ lookup('env', 'WITH_APPLIANCE_SEEDING') | default(true, true) | bool }}"

# Consul Service Discovery
consul_data_dir: /var/consul
consul_suffix: service.consul
consul_port: 8500
consul_server: "{{self_host}}:{{consul_port}}"
join_type: join

db_host: "db.{{consul_suffix}}"
docker_db_host: "db.{{consul_suffix}}"
api_server: "balancer.{{consul_suffix}}"

phoenix_host: "phoenix.{{consul_suffix}}"
phoenix_port: 9090
phoenix_server: "{{phoenix_host}}:{{phoenix_port}}"

isaac_host: "isaac.{{consul_suffix}}"
isaac_port: 9190
isaac_server: "{{isaac_host}}:{{isaac_port}}"

search_host: "elasticsearch.{{consul_suffix}}"
es_5_host: "elasticsearch-5.{{consul_suffix}}"
es_logs_port: 9201
log_host: "{{es_5_host}}:{{es_logs_port}}"
search_server_http: "{{search_host}}:9200"
search_server: "{{search_host}}:9300"

ashes_host: "ashes.{{consul_suffix}}"
ashes_port: 4000
ashes_server: "{{ashes_host}}:{{ashes_port}}"

storefront_port: 4041
storefront_host: "peacock.{{consul_suffix}}"
storefront_server: "{{storefront_host}}:{{storefront_port}}"

storefront_top_drawer_host: "storefront-top-drawer.{{consul_suffix}}"
storefront_top_drawer_server: "{{storefront_top_drawer_host}}:{{storefront_port}}"

storefront_perfect_gourmet_host: "storefront-perfect-gourmet.{{consul_suffix}}"
storefront_perfect_gourmet_server: "{{storefront_perfect_gourmet_host}}:{{storefront_port}}"

kafka_host: "kafka.{{consul_suffix}}"
kafka_port: 9092
kafka_server: "{{kafka_host}}:{{kafka_port}}"

zookeeper_host: "zookeeper.{{consul_suffix}}"
zookeeper_port: 2181
zookeeper_server: "{{zookeeper_host}}:{{zookeeper_port}}"
zookeepers: zk://{{zookeeper_server}}

schema_host: "schema-registry.{{consul_suffix}}"
schema_port: 8081
schema_server: "{{schema_host}}:{{schema_port}}"

middlewarehouse_host: "middlewarehouse.{{consul_suffix}}"
middlewarehouse_port: 9292
middlewarehouse_server: "{{middlewarehouse_host}}:{{middlewarehouse_port}}"

solomon_service_name: "solomon"
solomon_host: "{{solomon_service_name}}.{{consul_suffix}}"
solomon_port: 4002
solomon_server: "{{solomon_host}}:{{solomon_port}}"

mesos_master: "mesos-master.{{consul_suffix}}"
mesos_port: 5050
mesos_server: "{{mesos_master}}:{{mesos_port}}"

marathon_host: "marathon.{{consul_suffix}}"
marathon_port: 8080
marathon_server: "{{marathon_host}}:{{marathon_port}}"

onboarding_service_host: "onboarding-service.{{consul_suffix}}"
onboarding_service_port: 4003
onboarding_service_server: "{{onboarding_service_host}}:{{onboarding_service_port}}"

onboarding_ui_host: "onboarding_ui.{{consul_suffix}}"
onboarding_ui_port: 4042
onboarding_ui_server: "{{onboarding_ui_host}}:{{onboarding_ui_port}}"

product_search_host: "product_search.{{consul_suffix}}"
product_search_port: 5492
product_search_server: "{{product_search_host}}:{{product_search_port}}"

messaging_host: "messaging.{{consul_suffix}}"

dashboard_host: "dashboard.{{consul_suffix}}"
dashboard_port: 4198
dashboard_server: "{{dashboard_host}}:{{dashboard_port}}"

kibana_host: "kibana.{{consul_suffix}}"
kibana_port: 5601
kibana_server: "{{kibana_host}}:{{kibana_port}}"

pgweb_host: "pgweb.{{consul_suffix}}"
pgweb_port: 8082
pgweb_server: "{{pgweb_host}}:{{pgweb_port}}"

hyperion_host: "hyperion.{{consul_suffix}}"
hyperion_port: 8880
hyperion_server: "{{hyperion_host}}:{{hyperion_port}}"

geronimo_host: "geronimo.{{consul_suffix}}"
geronimo_port: 8881
geronimo_server: "{{geronimo_host}}:{{geronimo_port}}"

# Database & bottledwater
db_user: phoenix
db_name: phoenix
db_connection_string: "postgresql://{{db_host}}/{{db_name}}?user={{db_user}}"
bottledwater_slot_phoenix: bottledwater_phoenix
bottledwater_slot_middlewarehouse: bottledwater_middlewarehouse
bottledwater_slot_onboarding_service: bottledwater_onboarding_service

# Flyway
flyway_vers: 4.0.3
flyway_dir: "/usr/local/share/flyway-{{flyway_vers}}"
flyway_url: "https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/{{flyway_vers}}/flyway-commandline-{{flyway_vers}}-linux-x64.tar.gz"
flyway: "{{flyway_dir}}/flyway -locations=filesystem:sql/ -configFile=sql/flyway.conf"

# Phoenix
phoenix_version: 1.0
phoenix_env: staging
phoenix_src: ../../phoenix-scala/

phoenix_dir: /phoenix
phoenix_jar: "{{phoenix_dir}}/phoenix.jar"
phoenix_seeder_jar: "{{phoenix_dir}}/phoenix-seeder.jar"
phoenix_db_name: phoenix
phoenix_db_user: phoenix
phoenix_test_db_name: phoenix_test
phoenix_tracing: "false"
phoenix_db_connection_string: "postgresql://{{phoenix_db_user}}@{{db_host}}/{{phoenix_db_name}}"

phoenix_api_version: v1
phoenix_api_user_org: tenant
phoenix_api_user: "api@foxcommerce.com"
phoenix_api_password: "api$pass7!"

phoenix_tax_rule_region: 4129
phoenix_tax_rule_rate: 7.5

# Green River
greenriver_env: localhost
greenriver_restart: "false"

# Do not use this in production
# This is a ttl of 1 year
phoenix_token_ttl: 525600
solomon_token_ttl: 365
solomon_jwt: ""

# Middlewarehouse
middlewarehouse_env: staging
middlewarehouse_src: ../../middlewarehouse/
middlewarehouse_dir: /middlewarehouse
middlewarehouse_bin: "{{middlewarehouse_dir}}/middlewarehouse"
middlewarehouse_db_name: middlewarehouse
middlewarehouse_db_user: middlewarehouse
middlewarehouse_db_connection_string: "postgresql://{{middlewarehouse_db_user}}@{{db_host}}/{{middlewarehouse_db_name}}"
middlewarehouse_test_db_name: middlewarehouse_test

# Hyperion
hyperion_env: prod
hyperion_src: ../../hyperion/
hyperion_dir: /hyperion
hyperion_db_name: hyperion
hyperion_db_test_name: hyperion_test
hyperion_db_user: hyperion
hyperion_db_password: hyperion
hyperion_db_connection_string: "postgresql://{{hyperion_db_user}}@{{db_host}}/{{hyperion_db_name}}"
hyperion_test_db_name: hyperion_test
hyperion_push_check_interval: 5
hyperion_create_plugin_in_ashes_on_start: true

# Geronimo
geronimo_env: prod
geronimo_src: ../../geronimo/
geronimo_dir: /geronimo
geronimo_db_name: geronimo
geronimo_db_test_name: geronimo_test
geronimo_db_user: geronimo
geronimo_db_connection_string: "postgresql://{{geronimo_db_user}}@{{db_host}}/{{geronimo_db_name}}"
geronimo_db_password: ""
geronimo_start_worker: true
geronimo_kafka_consumer_group: geronimo

# Eggcreate
eggcrate_host: "eggcrate.{{consul_suffix}}"
eggcrate_server: "{{eggcrate_host}}"

# Bernardo
bernardo_dir: /bernardo
bernardo_src: ../../intelligence/bernardo/
bernardo_db_name: ic
bernardo_db_user: ic
bernardo_port: "9290"
bernardo_host: bernardo.service.consul
bernardo_server: "{{bernardo_host}}:{{bernardo_port}}"

# River Rock
river_rock_port: "9390"
river_rock_host: river-rock.service.consul
river_rock_server: "{{river_rock_host}}:{{river_rock_port}}"

# Henhouse
henhouse_host: "henhouse.{{consul_suffix}}"
henhouse_server: "{{henhouse_host}}"

# anthill
anthill_host: "anthill.{{consul_suffix}}"
anthill_server: "{{anthill_host}}"

# neo4j
neo4j_user: "neo4j"
neo4j_pass: "password"
neo4j_host: "neo4j.{{consul_suffix}}"
neo4j_server: "{{neo4j_host}}"
neo4j_port: "7687"
neo4j_http_port: "7474"

# suggester
suggester_host: "suggester.{{consul_suffix}}"
suggester_server: "{{suggester_host}}"
dexter_base_url: "https://bots.rundexter.com/api/v2/bot/"

# Elasticsearch 2.x
es_version: elasticsearch-2.1.2
es_zip: "{{es_version}}.zip"
es_home: /usr/local
es_path: "{{es_home}}/{{es_version}}"
es_heap_size: 2048m

# Elasticsearch 5.x
es5_version: elasticsearch-5.1.2
es5_zip: "{{es5_version}}.zip"
es5_base_url: https://artifacts.elastic.co/downloads/elasticsearch
es5_download_url: "{{es5_base_url}}/{{es5_zip}}"
es5_home: /usr/local
es5_path: "{{es5_home}}/{{es5_version}}"
es5_jmx_port: 29111
es5_max_file_descriptors: 65536
es5_heap_size: 2048m

# Consumers
activities_topic: "scoped_activities"

# Shipstation consumer
shipstation_api_key: ""
shipstation_api_secret: ""
shipstation_topic: "{{activities_topic}}"
shipstation_interval: "10s"

# Product activity daemon
product_activity_interval: 60

# Storefront variables
storefront_default_language: en
storefront_fixed_language: false

# Url prefixes
url_prefix_topdrawer: ""
url_prefix_perfectgourmet: ""

# JMX ports
es_jmx_port: 29010
phoenix_jmx_port: 39014
greenriver_jmx_port: 39011
messaging_jmx_port: 39012
loyalty_jmx_port: 39013

# Seeds
seeds_class: seeds.Seeds
seeds_cmd: "{{seeds_class}} seed --seedAdmins --seedShippingRules"
gatling_oneshot_seeds_cmd: gatling.seeds.OneshotSeeds
gatling_continuous_seeds_cmd: gatling.seeds.ContinuousSeeds

# Google OAuth
google_oauth_admin_client_id: ""
google_oauth_admin_secret: ""
google_oauth_admin_hosted_domain: ""
google_oauth_admin_redirect_uri: ""

google_oauth_frontend_client_id: ""
google_oauth_frontend_secret: ""
google_oauth_frontend_redirect_uri: ""

# VM swap size
swap_file: /swap
swap_size_mb: 2000

# Zipkin
zipkin_collector: localhost

# Test Stripe api key
stripe_api_key: sk_test_13rnEgvA4DGHgv4f2GMCDtes
stripe_publishable_key: pk_test_1H2C9nTZpy8szPmboOEDwdwN

# Mesos
mesos_quorum: 1
mesos_ip: "$(hostname -i)"

# Onboarding
onboarding_service_db_name: onboarding
onboarding_service_db_user: onboarding
onboarding_service_db_connection_string: "postgresql://{{onboarding_service_db_user}}@{{db_host}}/{{onboarding_service_db_name}}"

# Messaging
retailer_name: "FoxCommerce"
contact_email: "pavel@foxcommerce.com"
mailchimp_api_key: ""
messaging_env: "production"

# Materialized views
update_materialized_views_sql: "/usr/local/share/update_materialized_views.sql"
update_materialized_views_cmd: "psql {{db_connection_string}} -f {{update_materialized_views_sql}}"

# External analytics
facebook_pixel_id: "433654337026546"
ga_tracking_id: ""

# S3
s3_bucket: foxcomm-images
s3_region: us-west-1

# Imgix S3 source for products images
imgix_products_source: ""
imgix_s3_bucket_name: ""
imgix_s3_bucket_prefix: ""

# Data Import
data_import_dir: "/data_import"
data_import_s3_bucket: fc-dev-assets
data_import_s3_region: us-west-2
data_import_listings_path: "/sample_data/listings.json"
data_import_products_path: "/sample_data/products.json"
data_import_docker_url: "{{docker_registry}}:5000/data-import:{{docker_tags.data_import}}"
data_import_cmd: both
data_import_max_count: 100

# Various flags
first_run: false
is_aws: false
is_ci: "{{ lookup('env', 'CI') }}"
is_amigo: false
is_appliance: false
is_staging: false
is_redeploy: false
jmx_enabled: false
packing: false
with_onboarding: false
with_shipstation: false
