"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = demo;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Location = function () {
  function Location(input) {
    return input != null && typeof input.address === 'string' && CountryCode(input.country) && GeoPoint(input.pos);
  }

  ;
  Object.defineProperty(Location, Symbol.hasInstance, {
    value: function value(input) {
      return Location(input);
    }
  });
  return Location;
}();

var CountryCode = function () {
  function CountryCode(input) {
    return input === "GB" || input === "US" || input === "FR" || input === "CA";
  }

  ;
  Object.defineProperty(CountryCode, Symbol.hasInstance, {
    value: function value(input) {
      return CountryCode(input);
    }
  });
  return CountryCode;
}(); // Sorry everyone else!

var GeoPoint = function () {
  function GeoPoint(input) {
    return input != null && typeof input.lat === 'number' && typeof input.lon === 'number';
  }

  ;
  Object.defineProperty(GeoPoint, Symbol.hasInstance, {
    value: function value(input) {
      return GeoPoint(input);
    }
  });
  return GeoPoint;
}();

var Thing = function () {
  function Thing() {
    _classCallCheck(this, Thing);
  }

  _createClass(Thing, [{
    key: "go",
    value: function go(age) {
      function _ref(_id) {
        if (!(Array.isArray(_id) && _id.length >= 2 && typeof _id[0] === 'string' && typeof _id[1] === 'number')) {
          throw new TypeError("Function return value violates contract.\n\nExpected:\n[string, number]\n\nGot:\n" + _inspect(_id));
        }

        return _id;
      }

      if (!(typeof age === 'number')) {
        throw new TypeError("Value of argument \"age\" violates contract.\n\nExpected:\nnumber\n\nGot:\n" + _inspect(age));
      }

      return _ref([this.name, age]);
    }
  }]);

  return Thing;
}();

var User = function () {
  function User(name, email) {
    var age = arguments.length <= 2 || arguments[2] === undefined ? 123 : arguments[2];

    _classCallCheck(this, User);

    this.name = name;

    if (!(typeof this.name === 'string')) {
      throw new TypeError("Value of \"this.name\" violates contract.\n\nExpected:\nstring\n\nGot:\n" + _inspect(this.name));
    }

    this.email = email;

    if (!(typeof this.email === 'string')) {
      throw new TypeError("Value of \"this.email\" violates contract.\n\nExpected:\nstring\n\nGot:\n" + _inspect(this.email));
    }

    this.age = age;

    if (!(typeof this.age === 'number')) {
      throw new TypeError("Value of \"this.age\" violates contract.\n\nExpected:\nnumber\n\nGot:\n" + _inspect(this.age));
    }
  }

  _createClass(User, [{
    key: "method",
    value: function method(input, extra) {
      function _ref2(_id2) {
        if (!(_id2 instanceof User)) {
          throw new TypeError("Function return value violates contract.\n\nExpected:\nUser\n\nGot:\n" + _inspect(_id2));
        }

        return _id2;
      }

      if (!(typeof input === 'string' || typeof input === 'boolean')) {
        throw new TypeError("Value of argument \"input\" violates contract.\n\nExpected:\nstring | bool\n\nGot:\n" + _inspect(input));
      }

      if (!(extra === false)) {
        throw new TypeError("Value of argument \"extra\" violates contract.\n\nExpected:\nfalse\n\nGot:\n" + _inspect(extra));
      }

      return _ref2(this);
    }
  }, {
    key: "setLocation",
    value: function setLocation(input) {
      function _ref3(_id3) {
        if (!(_id3 instanceof User)) {
          throw new TypeError("Function return value violates contract.\n\nExpected:\nUser\n\nGot:\n" + _inspect(_id3));
        }

        return _id3;
      }

      this.location = input;

      if (!Location(this.location)) {
        throw new TypeError("Value of \"this.location\" violates contract.\n\nExpected:\nLocation\n\nGot:\n" + _inspect(this.location));
      }

      return _ref3(this);
    }
  }]);

  return User;
}();

function demo(name, email, location, country) {
  function _ref4(_id4) {
    if (!(_id4 instanceof User)) {
      throw new TypeError("Function \"demo\" return value violates contract.\n\nExpected:\nUser\n\nGot:\n" + _inspect(_id4));
    }

    return _id4;
  }

  if (!(typeof name === 'string')) {
    throw new TypeError("Value of argument \"name\" violates contract.\n\nExpected:\nstring\n\nGot:\n" + _inspect(name));
  }

  if (!(typeof email === 'string')) {
    throw new TypeError("Value of argument \"email\" violates contract.\n\nExpected:\nstring\n\nGot:\n" + _inspect(email));
  }

  if (!(location instanceof Object)) {
    throw new TypeError("Value of argument \"location\" violates contract.\n\nExpected:\nObject\n\nGot:\n" + _inspect(location));
  }

  var user = new User(name, email);
  user.setLocation(location);
  user.location.country = country;

  if (!CountryCode(user.location.country)) {
    throw new TypeError("Value of \"user.location.country\" violates contract.\n\nExpected:\nCountryCode\n\nGot:\n" + _inspect(user.location.country));
  }

  user.nope = 123;
  return _ref4(user.method('str', false));
}

function _inspect(input, depth) {
  var maxDepth = 4;
  var maxKeys = 15;

  if (depth === undefined) {
    depth = 0;
  }

  depth += 1;

  if (input === null) {
    return 'null';
  } else if (input === undefined) {
    return 'void';
  } else if (typeof input === 'string' || typeof input === 'number' || typeof input === 'boolean') {
    return typeof input === "undefined" ? "undefined" : _typeof(input);
  } else if (Array.isArray(input)) {
    if (input.length > 0) {
      var _ret = function () {
        if (depth > maxDepth) return {
            v: '[...]'
          };

        var first = _inspect(input[0], depth);

        if (input.every(function (item) {
          return _inspect(item, depth) === first;
        })) {
          return {
            v: first.trim() + '[]'
          };
        } else {
          return {
            v: '[' + input.slice(0, maxKeys).map(function (item) {
              return _inspect(item, depth);
            }).join(', ') + (input.length >= maxKeys ? ', ...' : '') + ']'
          };
        }
      }();

      if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
    } else {
      return 'Array';
    }
  } else {
    var keys = Object.keys(input);

    if (!keys.length) {
      if (input.constructor && input.constructor.name && input.constructor.name !== 'Object') {
        return input.constructor.name;
      } else {
        return 'Object';
      }
    }

    if (depth > maxDepth) return '{...}';
    var indent = '  '.repeat(depth - 1);
    var entries = keys.slice(0, maxKeys).map(function (key) {
      return (/^([A-Z_$][A-Z0-9_$]*)$/i.test(key) ? key : JSON.stringify(key)) + ': ' + _inspect(input[key], depth) + ';';
    }).join('\n  ' + indent);

    if (keys.length >= maxKeys) {
      entries += '\n  ' + indent + '...';
    }

    if (input.constructor && input.constructor.name && input.constructor.name !== 'Object') {
      return input.constructor.name + ' {\n  ' + indent + entries + '\n' + indent + '}';
    } else {
      return '{\n  ' + indent + entries + '\n' + indent + '}';
    }
  }
}