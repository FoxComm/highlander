"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

var User = function User(input) {
  return input != null && (typeof input === "undefined" ? "undefined" : _typeof(input)) === 'object' && (input.name === undefined || typeof input.name === 'string') && (input.email === undefined || typeof input.email === 'string');
};

function demo(name, email) {
  function _ref(_id) {
    if (!(typeof _id === 'string')) {
      throw new TypeError("Function \"demo\" return value violates contract, expected string got " + (_id === null ? 'null' : (typeof _id === "undefined" ? "undefined" : _typeof(_id)) === 'object' && _id.constructor ? _id.constructor.name || '[Unknown Object]' : typeof _id === "undefined" ? "undefined" : _typeof(_id)));
    }

    return _id;
  }

  var user = {
    name: "foo",
    email: "bar@example.com",

    something: function something() {
      function _something(_id2) {
        if (!User(_id2)) {
          throw new TypeError("Function return value violates contract, expected User got " + (_id2 === null ? 'null' : (typeof _id2 === "undefined" ? "undefined" : _typeof(_id2)) === 'object' && _id2.constructor ? _id2.constructor.name || '[Unknown Object]' : typeof _id2 === "undefined" ? "undefined" : _typeof(_id2)));
        }

        return _id2;
      }

      this.name = name;
      return _something(this);
    },

    other: function other() {
      var _this = this;

      function _ref2(_id3) {
        if (!(typeof _id3 === 'string')) {
          throw new TypeError("Function return value violates contract, expected string got " + (_id3 === null ? 'null' : (typeof _id3 === "undefined" ? "undefined" : _typeof(_id3)) === 'object' && _id3.constructor ? _id3.constructor.name || '[Unknown Object]' : typeof _id3 === "undefined" ? "undefined" : _typeof(_id3)));
        }

        return _id3;
      }

      var foo = function foo() {
        _this.email = {};
        return 'foo';
      };
      return _ref2(foo());
    }
  };

  if (!User(user)) {
    throw new TypeError("Value of variable \"user\" violates contract, expected User got " + (user === null ? 'null' : (typeof user === "undefined" ? "undefined" : _typeof(user)) === 'object' && user.constructor ? user.constructor.name || '[Unknown Object]' : typeof user === "undefined" ? "undefined" : _typeof(user)));
  }

  return _ref(user.something().other());
}