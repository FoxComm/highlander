"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demo;

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

function demo(input) {
  function _ref(_id) {
    if (!(typeof _id === 'number' && !isNaN(_id) && _id >= -128 && _id <= 127 && _id === Math.floor(_id))) {
      throw new TypeError("Function \"demo\" return value violates contract, expected int8 got " + (_id === null ? 'null' : (typeof _id === "undefined" ? "undefined" : _typeof(_id)) === 'object' && _id.constructor ? _id.constructor.name || '[Unknown Object]' : typeof _id === "undefined" ? "undefined" : _typeof(_id)));
    }

    return _id;
  }

  if (!(input instanceof Int8Array)) {
    throw new TypeError("Value of argument \"input\" violates contract, expected Int8Array got " + (input === null ? 'null' : (typeof input === "undefined" ? "undefined" : _typeof(input)) === 'object' && input.constructor ? input.constructor.name || '[Unknown Object]' : typeof input === "undefined" ? "undefined" : _typeof(input)));
  }

  var foo = new Int8Array(34);
  var num = new Buffer(123);

  if (!(typeof num === 'number')) {
    throw new TypeError("Value of variable \"num\" violates contract, expected number got " + (num === null ? 'null' : (typeof num === "undefined" ? "undefined" : _typeof(num)) === 'object' && num.constructor ? num.constructor.name || '[Unknown Object]' : typeof num === "undefined" ? "undefined" : _typeof(num)));
  }

  return _ref(input[0]);
}