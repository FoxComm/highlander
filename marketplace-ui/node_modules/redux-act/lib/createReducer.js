'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = createReducer;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _constants = require('./constants');

var _batch = require('./batch');

var _batch2 = _interopRequireDefault(_batch);

function createReducer(handlers, defaultState) {
  if (handlers === undefined) handlers = {};

  var opts = {
    payload: true
  };

  function has(actionCreator) {
    return !!handlers[actionCreator.toString()];
  }

  function on(actionCreator, handler) {
    handlers[actionCreator.toString()] = handler;
  }

  function off(actionCreator) {
    delete handlers[actionCreator.toString()];
  }

  function options(newOpts) {
    Object.keys(newOpts).forEach(function (name) {
      return opts[name] = newOpts[name];
    });
  }

  if (typeof handlers === 'function') {
    var factory = handlers;
    handlers = {};
    factory(on, off);
  }

  if (!has(_batch2['default'])) {
    on(_batch2['default'], function (state, payload) {
      if (opts.payload) {
        return payload.reduce(reduce, state);
      } else {
        return payload.payload.reduce(reduce, state);
      }
    });
  }

  function reduce(state, action) {
    if (state === undefined) state = defaultState;

    if (action[_constants.ID] && handlers[action[_constants.ID]]) {
      if (opts.payload) {
        return handlers[action[_constants.ID]](state, action.payload, action.meta);
      } else {
        return handlers[action[_constants.ID]](state, action);
      }
    } else {
      return state;
    }
  };

  reduce.has = has;
  reduce.on = on;
  reduce.off = off;
  reduce.options = options;

  return reduce;
}

;
module.exports = exports['default'];