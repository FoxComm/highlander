'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
// @class StoreCredits
// Accessible via [storeCredits](#foxapi-storecredits) property of [FoxApi](#foxapi) instance.

var _endpoints = require('../endpoints');

var endpoints = _interopRequireWildcard(_endpoints);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var StoreCredits = function () {
  function StoreCredits(api) {
    _classCallCheck(this, StoreCredits);

    this.api = api;
  }

  // @method list(): Promise<StoreCreditsResponse>
  // Returns list of all store credits.


  _createClass(StoreCredits, [{
    key: 'list',
    value: function list() {
      return this.api.post(endpoints.storeCredits, {
        query: {
          term: {
            customerId: this.api.getCustomerId()
          }
        }
      });
    }

    // @method one(storeCreditId: Number): Promise<StoreCredit>
    // Returns store credit by id.

  }, {
    key: 'one',
    value: function one(storeCreditId) {
      return this.api.get(endpoints.storeCredit(storeCreditId));
    }

    // @method totals(): Promise<StoreCreditTotals>

  }, {
    key: 'totals',
    value: function totals() {
      return this.api.get(endpoints.storeCreditTotals);
    }
  }]);

  return StoreCredits;
}();

// @miniclass StoreCreditsResponse (StoreCredits)
// @inherits ResultMetadata
// @field result: Array<StoreCredit>


exports.default = StoreCredits;