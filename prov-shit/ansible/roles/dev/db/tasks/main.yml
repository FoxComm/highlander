---

- name: Kill Bottledwater Services
  shell: systemctl stop bottledwater_{{item}} || true
  with_items:
    - phoenix
    - middlewarehouse
    - marketplace
  when: item != 'marketplace' or with_marketplace
  become: true

- name: Kill Materialized Views
  shell: systemctl stop materialized_views || true
  become: true

- name: Restart Postgres
  service: name=postgresql state=restarted
  become: true

- name: Create Phoenix Database
  postgresql_db: name={{phoenix_db_name}} encoding='UTF-8' lc_ctype='en_US.UTF-8' lc_collate='en_US.UTF-8' template='template0'
  become: true

- name: Create Middlewarehouse Database
  postgresql_db: name={{middlewarehouse_db_name}} encoding='UTF-8' lc_ctype='en_US.UTF-8' lc_collate='en_US.UTF-8' template='template0'
  become: true

- name: Enable Bottledwater Extensions in Postgres
  postgresql_ext: name=bottledwater db={{item}}
  with_items:
    - "{{phoenix_db_name}}"
    - "{{middlewarehouse_db_name}}"
    - "{{marketplace_db_name}}"
  when: item != "{{marketplace_db_name}}" or with_marketplace
  become: true

- name: Configure Database Users
  postgresql_user: name={{item}} state=present role_attr_flags=SUPERUSER
  become: true
  with_items:
      - root
      - "'{{user}}'"
      - phoenix
      - middlewarehouse

- name: Create Phoenix Directory
  file: path={{phoenix_dir}} state=directory owner="{{user}}"
  become: true

- name: Create Middlewarehouse Directory
  file: path={{middlewarehouse_dir}} state=directory owner="{{user}}"
  become: true

- name: Synchronize Phoenix SQL
  synchronize: src="{{phoenix_src}}/sql" dest="{{phoenix_dir}}" delete=yes recursive=yes
  become: true

- name: Synchronize Middlewarehouse SQL
  synchronize: src="{{middlewarehouse_src}}/sql" dest="{{middlewarehouse_dir}}" delete=yes recursive=yes
  become: true

- name: Delete Phoenix Log Directory
  file: path="{{phoenix_dir}}/log" state=absent

- name: Create Phoenix Log Directory
  file: path="{{phoenix_dir}}/log" state=directory owner="{{user}}"  mode="0777"

- name: Setup Update Materialzied Views SQL
  copy: src=update_materialized_views.sql dest={{update_materialized_views_sql}}
  become: true

- name: Setup Materialized Views Command
  template: src=update_materialized_views_forever.sh dest="{{usr_local}}/bin/update_materialized_views_forever.sh" mode="u+x,g+x,o+x"
  become: true

- name: Setup Materialized Views Service
  copy: src=materialized_views.service dest="{{dest_services}}/materialized_views.service"
  become: true

- name: Setup Flyway Config
  template: src=flyway.conf dest="{{phoenix_dir}}/sql/flyway.conf" mode="u+x,g+x,o+x"
  become: true

- name: Clean Phoenix Database
  shell: sudo -u root FLYWAY_HOME={{flyway_dir}} {{flyway}} clean
  args:
    chdir: "{{phoenix_dir}}"

- name: Migrate Phoenix Database
  shell: sudo -u root FLYWAY_HOME={{flyway_dir}} {{flyway}} migrate
  args:
    chdir: "{{phoenix_dir}}"

- name: Clean Middlewarehouse Database
  shell: sudo -u root FLYWAY_HOME={{flyway_dir}} {{flyway}} clean
  args:
    chdir: "{{middlewarehouse_dir}}"

- name: Migrate Middlewarehouse Database
  shell: sudo -u root FLYWAY_HOME={{flyway_dir}} {{flyway}} migrate
  args:
    chdir: "{{middlewarehouse_dir}}"

- name: Setup Cron to Refresh Customers Ranking View
  cron: name="refresh customer ranking" minute="*/5" job="{{usr_local}}/bin/refresh_customer_ranks.sh > /dev/null"
  become: true

- name: Reload Systemd for Materialized Views
  become: true
  command: systemctl daemon-reload

- name: Start Materialized Views Service
  service: name=materialized_views state=started enabled=yes sleep=5
  become: true

- name: Start Bottledwater Services
  service: name=bottledwater_{{item}} state=started enabled=yes sleep=10
  with_items:
    - phoenix
    - middlewarehouse
    - marketplace
  when: item != 'marketplace' or with_marketplace
  become: true
