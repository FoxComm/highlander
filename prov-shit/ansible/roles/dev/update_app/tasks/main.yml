---

- name: Find out Highlander path
  shell: "dirname $(dirname $(pwd))"
  register: highlander_path_out
  when: auto_build == "y" or auto_build == "yes"

- name: Checkout Specified Branch
  shell: "git checkout {{branch_name}}"
  args:
    chdir: "{{highlander_path_out.stdout}}/{{app_name}}"
  when: auto_build == "y" or auto_build == "yes"

- name: Build and Dockerize Application
  shell: "GOOS=linux make build && make docker && DOCKER_TAG={{tag_name}} docker-push"
  args:
    chdir: "{{highlander_path_out.stdout}}/{{app_name}}"
  when: auto_build == "y" or auto_build == "yes"

- name: Find out Playbook path
  shell: "pwd"
  register: playbook_path_out

- name: Copy Application Marathon JSON
  template: src={{playbook_path_out.stdout}}/roles/dev/{{app_name}}/templates/{{app_name}}.json dest=/tmp
  args:
    chdir: "{{playbook_path_out.stdout}}"

- name: Delete Application in Marathon
  shell: 'curl -sS -XDELETE http://{{marathon_server}}/v2/apps/{{app_name}}'

- name: Create Application in Marathon
  shell: 'curl -sS -XPOST -d@/tmp/{{app_name}}.json -H "Content-Type: application/json" http://{{marathon_server}}/v2/apps?force=true'

- name: Pause for 15 seconds
  pause: seconds=15

- name: Get Application Marathon tasks in `healthy` state
  shell: curl -sS -XGET http://{{marathon_server}}/v2/apps/{{app_name}} | jq '.app.tasksHealthy > 0'
  register: healthy_tasks_available
  until: healthy_tasks_available.stdout == 'true'
  retries: 60
  delay: 10

- name: Cleanup
  file: path=/tmp/{{app_name}}.json state=absent
