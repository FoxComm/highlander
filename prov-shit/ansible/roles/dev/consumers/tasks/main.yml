---

- name: Creates Marathon JSON directory
  file: path=/marathon/applications state=directory

- name: Copy Stock Items Consumer Marathon JSON
  template: src=stock-items-consumer.json dest=/marathon/applications mode="u+rw,g+rw,o+r"

- name: Copy Shipments Consumer Marathon JSON
  template: src=shipments-consumer.json dest=/marathon/applications mode="u+rw,g+rw,o+r"

- name: Copy Capture Consumer Marathon JSON
  template: src=capture-consumer.json dest=/marathon/applications mode="u+rw,g+rw,o+r"

- name: Copy Gift Card Consumer Marathon JSON
  template: src=gift-card-consumer.json dest=/marathon/applications mode="u+rw,g+rw,o+r"

- name: Update Stock Items Consumer in Marathon
  shell: 'curl -X PUT -d@/marathon/applications/stock-items-consumer.json -H "Content-Type: application/json" http://{{marathon_server}}/v2/apps/stock-items-consumer'

- name: Restart Stock Items Consumer in Marathon
  shell: 'curl -X POST http://{{marathon_server}}/v2/apps/stock-items-consumer/restart'

- name: Update Shipments Consumer in Marathon
  shell: 'curl -X PUT -d@/marathon/applications/shipments-consumer.json -H "Content-Type: application/json" http://{{marathon_server}}/v2/apps/shipments-consumer'

- name: Restart Shipments Consumer in Marathon
  shell: 'curl -X POST http://{{marathon_server}}/v2/apps/shipments-consumer/restart'

- name: Update Capture Consumer in Marathon
  shell: 'curl -X PUT -d@/marathon/applications/capture-consumer.json -H "Content-Type: application/json" http://{{marathon_server}}/v2/apps/capture-consumer'

- name: Restart Capture Consumer in Marathon
  shell: 'curl -X POST http://{{marathon_server}}/v2/apps/capture-consumer/restart'

- name: Update Gift Card Consumer in Marathon
  shell: 'curl -X PUT -d@/marathon/applications/gift-card-consumer.json -H "Content-Type: application/json" http://{{marathon_server}}/v2/apps/gift-card-consumer'

- name: Restart Gift Card Consumer in Marathon
  shell: 'curl -X POST http://{{marathon_server}}/v2/apps/gift-card-consumer/restart'

- name: Get Consumers Marathon tasks in `healthy` state
  shell: curl -sS -XGET http://{{marathon_server}}/v2/apps/{{item}} | jq '.app.tasksHealthy > 0'
  register: healthy_tasks_available
  until: healthy_tasks_available.stdout == 'true'
  retries: 60
  delay: 10
  when: vagrant
  with_items:
    - shipments-consumer
    - capture-consumer
    - gift-card-consumer
    - stock-items-consumer
