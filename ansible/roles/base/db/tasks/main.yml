---

- name: Update System Package Cache
  apt: update_cache=yes
  sudo: true

- name: Install Packages
  apt: name={{ item }} state=latest force=yes
  sudo: true
  with_items:
    - make
    - jq
    - debconf-utils
    - cmake
    - build-essential
    - libpq-dev
    - libcurl4-openssl-dev
    - libjansson-dev
    - pkg-config
    - librdkafka-dev
    - libsnappy-dev
    - postgresql-server-dev-9.5
    - postgresql-9.5
    - postgresql-client-9.5
    - postgresql-contrib-9.5

- name: Get Avro
  get_url: url={{avro_url}} dest="{{home}}/{{avro_name}}.tar.gz"

- name: Unzip Avro
  unarchive: src="{{home}}/{{avro_name}}.tar.gz" dest="{{home}}/" copy=no
  args:
    creates: "{{avro_dir}}"


- name: Make Avro Build Dir
  file: path="{{avro_dir}}/build" state=directory

- name: Run CMake for Avro
  shell: cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RelWithDebInfo
  args:
    chdir: "{{avro_dir}}/build"

- name: Compile and Install Avro
  shell: make && make test && make install && ldconfig
  sudo: true
  args:
    chdir: "{{avro_dir}}/build"

- name: Setup Libsnappy
  copy: src=libsnappy.pc dest=/usr/local/lib/pkgconfig/libsnappy.pc
  sudo: true

- name: Get Bottledwater
  git: repo={{bottledwater_repo}} dest={{bottledwater_dir}} version={{bottledwater_version}}

- name: Make and Install BottledWater
  shell: make && make install
  args:
    chdir: "{{bottledwater_dir}}"
  sudo: true

- name: Symlink Bottledwater Executable
  file: src="{{bottledwater_dir}}/kafka/bottledwater" dest="/usr/local/bin/bottledwater" state=link
  sudo: true

- name: Get Flyway
  get_url: url={{flyway_url}} dest={{home}}/flyway.tar.gz

- name: Unzip Flyway
  unarchive: src={{home}}/flyway.tar.gz dest=/usr/local/share copy=no
  sudo: true

- name: Make Flyway Executable
  file: path={{flyway_dir}}/flyway mode="u+x,g+x,o+x"
  sudo: true

- name: Add Flyway Home
  lineinfile: dest=/etc/profile line="FLYWAY_HOME={{flyway_dir}}"
  sudo: true

- name: Add Flyway Path
  lineinfile: dest=/etc/profile line="PATH=$PATH:$FLYWAY_HOME" insertafter="^FLYWAY"
  sudo: true

- name: Copy Postgres Configuration
  copy: src={{item}} dest="/etc/postgresql/9.5/main/{{item}}" mode="644"
  sudo: true
  with_items:
      - postgresql.conf
      - pg_hba.conf

- name: Reload Systemd for Postgresql
  sudo: yes
  command: systemctl daemon-reload

- name: Restart Postgresql
  service: name=postgresql state=restarted sleep=5
  sudo: true

- name: Install Prerequisites for posgresql ansible module
  sudo: true
  apt: name={{item}} state=latest
  with_items:
    - libpq-dev
    - python-psycopg2

- name: Setup db backup and restore scripts
  copy: src={{item}} dest="{{usr_local}}bin/{{item}}" mode="0777"
  with_items:
    - restore_db.sh
    - backup_db.sh
  sudo: true

- name: Download gcsfuse
  get_url: url=https://github.com/GoogleCloudPlatform/gcsfuse/releases/download/v0.18.2/gcsfuse_0.18.2_amd64.deb dest=/tmp/gcsfuse_0.18.2_amd64.deb

- name: Install gcsfuse
  shell: dpkg -i /tmp/gcsfuse_0.18.2_amd64.deb
  sudo: true

- stat: path={{db_backup_dir}}
  register: db_backup_dir_res
  sudo: true
  ignore_errors: True

- name: Create backup dir
  file: path={{db_backup_dir}} state=directory mode="0700"
  when: db_backup_dir_res.stat.exists == False
  sudo: true

- name: Add service which mount backup dir
  template: src=backup_mount.service dest={{dest_services}}/backup_mount.service
  sudo: true

- name: Copy Bottledwater Run File
  template: src=run_bottledwater.sh dest="/usr/local/bin/run_bottledwater.sh" mode="u+x,g+x,o+x"
  sudo: true

- name: Copy Bottledwater Service
  copy: src=bottledwater.service dest="{{dest_services}}/bottledwater.service"
  sudo: true

- name: Reload Systemd for Bottledwater
  sudo: yes
  command: systemctl daemon-reload

- name: Start Bottledwater
  service: name=bottledwater state=started enabled=yes sleep=10
  sudo: true

- name: Copy Consul Service File
  template: src=db.json dest="/etc/consul.d/db.json"
  sudo: true

- name: Setup cron for db backup
  cron: name="db backup" minute="30" hour="4" job="{{usr_local}}bin/backup_db.sh {{db_backup_dir}}/{{ansible_hostname}}_{{db_name}}_$(date +%F_%H_%M) {{db_name}}"
  sudo: true

- name: Start backup_mount service
  service: name=backup_mount state=started enabled=yes sleep=5
  sudo: true
